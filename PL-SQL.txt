-- Q1
-- DECLARE 
--   MY_NAME VARCHAR2(10) := 'AMIT';
-- BEGIN
--   DBMS_OUTPUT.PUT_LINE(MY_NAME);
-- END;
-- /

-- Q2
-- DECLARE
--   TYPE VARCHAR_TYPE IS VARRAY(3) OF VARCHAR2(20);
--   TYPE NUMBER_TYPE IS VARRAY(4) OF NUMBER;
--   ARRAY_NUMBERS NUMBER_TYPE := NUMBER_TYPE(1,2,3,4);
--   ARRAY_VARCHAR VARCHAR_TYPE := VARCHAR_TYPE('Amit', 'Liav','Omri'); 
-- BEGIN
--   DBMS_OUTPUT.PUT_LINE('1. PRINT THE FIRST NUMBER AND FIRST NAME');
--   DBMS_OUTPUT.PUT_LINE(ARRAY_NUMBERS(1) || ' '|| ARRAY_VARCHAR(1));
--   DBMS_OUTPUT.PUT_LINE(' ');
--   DBMS_OUTPUT.PUT_LINE('2. PRINT THE FIRST NUMBER AND FIRST NAME');
--   DBMS_OUTPUT.PUT_LINE(ARRAY_NUMBERS(ARRAY_NUMBERS.LAST) || ' '|| ARRAY_VARCHAR(ARRAY_VARCHAR.LAST));
--   DBMS_OUTPUT.PUT_LINE('3. EXTEND NAME ARRAY AND MAKE THE LAST AS kfir');
--   ARRAY_VARCHAR.EXREND;
--   ARRAY_VARCHAR(ARRAY_VARCHAR.LAST) := 'Kfir';
--   DBMS_OUTPUT.PUT_LINE(ARRAY_NUMBERS(ARRAY_NUMBERS.LAST) || ' '|| ARRAY_VARCHAR(ARRAY_VARCHAR.LAST));
--   DBMS_OUTPUT.PUT_LINE('4. PRINT LENGTH OF NUMBER VARRAY');
--   DBMS_OUTPUT.PUT_LINE(ARRAY_NUMBERS.COUNT);
-- END;
-- /

-- Q3
-- DECLARE
--   TYPE VARCHAR_TYPE IS VARRAY(3) OF VARCHAR2(20);
--   TYPE NUMBER_TYPE IS VARRAY(4) OF NUMBER;
--   ARRAY_NUMBERS NUMBER_TYPE := NUMBER_TYPE(1,2,3,4);
--   ARRAY_VARCHAR VARCHAR_TYPE := VARCHAR_TYPE('Amit', 'Liav','Omri'); 
-- BEGIN
--   IF LENGTH(ARRAY_VARCHAR(1)) = 4 THEN
--       DBMS_OUTPUT.PUT_LINE('THERE ARE FOUR CHARACTERS');
--   ELSE 
--       DBMS_OUTPUT.PUT_LINE('this is NOT a four char name');
--   END IF;
-- END;
-- /

-- Q4
-- DECLARE
--   TYPE VARCHAR_TYPE IS VARRAY(3) OF VARCHAR2(20);
--   TYPE NUMBER_TYPE IS VARRAY(4) OF NUMBER;
--   ARRAY_NUMBERS NUMBER_TYPE := NUMBER_TYPE(1,2,3,4);
--   ARRAY_VARCHAR VARCHAR_TYPE := VARCHAR_TYPE('Amit', 'Liav','Omri'); 
-- BEGIN
--   CASE ARRAY_NUMBERS(ARRAY_NUMBERS.LAST)
--   WHEN 2 THEN
--     DBMS_OUTPUT.PUT_LINE('number is two');
--   WHEN 3 THEN
--     DBMS_OUTPUT.PUT_LINE('number is three');
--   WHEN 4 THEN
--     DBMS_OUTPUT.PUT_LINE('number is four');
--   ELSE
--     DBMS_OUTPUT.PUT_LINE('bad number');
--   END CASE;
-- END;
-- /

-- Q5
DECLARE
  TYPE VARCHAR_TYPE IS VARRAY(3) OF VARCHAR2(6);
  TYPE NUMBER_TYPE IS VARRAY(4) OF NUMBER;
  ARRAY_NUMBERS NUMBER_TYPE := NUMBER_TYPE(1,2,3,4);
  ARRAY_VARCHAR VARCHAR_TYPE := VARCHAR_TYPE('may', 'june','july'); 
  I NUMBER := 1;
BEGIN
  LOOP 
    DBMS_OUTPUT.PUT_LINE(ARRAY_VARCHAR(I));
    I := I + 1;
    EXIT WHEN I > ARRAY_VARCHAR.COUNT;
  END LOOP;
END;
/

-- Q6
DECLARE
  TYPE VARCHAR_TYPE IS VARRAY(3) OF VARCHAR2(6);
  TYPE NUMBER_TYPE IS VARRAY(4) OF NUMBER;
  ARRAY_NUMBERS NUMBER_TYPE := NUMBER_TYPE(1,2,3,4);
  ARRAY_VARCHAR VARCHAR_TYPE := VARCHAR_TYPE('may', 'june','july'); 
  I NUMBER := 1;
BEGIN
  LOOP 
    DBMS_OUTPUT.PUT_LINE(SUBSTR(ARRAY_VARCHAR(I),1,I));
    I := I + 1;
    EXIT WHEN I > ARRAY_VARCHAR.COUNT;
  END LOOP;
END;
/

-- Q7
DECLARE
  FIRST_NAME OE.CUSTOMERS.CUST_FIRST_NAME%type;
  LAST_NAME OE.CUSTOMERS.CUST_LAST_NAME%type;
  CURSOR CUSTOMERS is SELECT CUST_FIRST_NAME, CUST_LAST_NAME from OE.CUSTOMERS;
BEGIN
  OPEN CUSTOMERS;
  LOOP
    FETCH CUSTOMERS INTO FIRST_NAME, LAST_NAME;
  EXIT WHEN CUSTOMERS%notfound;
  DBMS_OUTPUT.PUT_LINE(FIRST_NAME || ' ' || LAST_NAME);
  END LOOP;
END;

BEGIN
  FOR CUS IN (SELECT CUST_FIRST_NAME, CUST_LAST_NAME from OE.CUSTOMERS)
    LOOP
      DBMS_OUTPUT.PUT_LINE(CUS.CUST_FIRST_NAME || ' ' || CUS.CUST_LAST_NAME);
    END LOOP;
END;

-- Q8
BEGIN
  FOR CUS IN (SELECT CUST_FIRST_NAME, CUST_LAST_NAME from OE.CUSTOMERS)
    LOOP
      IF LENGTH(CUS.CUST_FIRST_NAME) = LENGTH(CUS.CUST_LAST_NAME) THEN
        DBMS_OUTPUT.PUT_LINE(CUS.CUST_FIRST_NAME || ' ' || CUS.CUST_LAST_NAME);
      END IF;
    END LOOP;
END;
