-- SELECT
-- Q1

SELECT PRODUCT_ID, PRODUCT_NAME, LIST_PRICE, MIN_PRICE
FROM OE.PRODUCT_INFORMATION
ORDER BY PRODUCT_NAME;

-- Q2

SELECT FIRST_NAME ||' ' || LAST_NAME AS FULL_NAME, PHONE_NUMBER, TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE) / 12) AS NUMBER_OF_YEARS_WORKED
FROM HR.EMPLOYEES;

-- Q3

SELECT  FIRST_NAME ||' ' || LAST_NAME AS FULL_NAME, SALARY
FROM HR.EMPLOYEES 
WHERE HIRE_DATE >= '01-JAN-05'
ORDER BY SALARY;

-- Q4

SELECT PRODUCT_NAME
FROM OE.PRODUCT_INFORMATION
WHERE LIST_PRICE - MIN_PRICE > 100;
ORDER BY PRODUCT_NAME;

-- JOIN
-- Q1

SELECT O.CUSTOMER_ID, C.CUST_FIRST_NAME ||' ' || C.CUST_LAST_NAME AS FULL_NAME, O.ORDER_ID
FROM OE.ORDERS O INNER JOIN OE.CUSTOMERS C ON C.CUSTOMER_ID = O.CUSTOMER_ID
WHERE ORDER_DATE LIKE '__-___-07%' AND CREDIT_LIMIT BETWEEN 200 AND 700
ORDER BY FULL_NAME, O.ORDER_ID;

SELECT O.CUSTOMER_ID, C.CUST_FIRST_NAME ||' ' || C.CUST_LAST_NAME AS FULL_NAME, O.ORDER_ID
FROM OE.ORDERS O INNER JOIN OE.CUSTOMERS C ON C.CUSTOMER_ID = O.CUSTOMER_ID
WHERE EXTRACT(YEAR FROM O.ORDER_DATE) = 2007 AND CREDIT_LIMIT BETWEEN 200 AND 700
ORDER BY FULL_NAME, O.ORDER_ID;

-- Q2

SELECT PI.PRODUCT_NAME, PI.LIST_PRICE, C.CATEGORY_NAME
FROM OE.PRODUCT_INFORMATION PI INNER JOIN OE.CATEGORIES_TAB C ON PI.CATEGORY_ID = C.CATEGORY_ID
ORDER BY C.CATEGORY_NAME;

-- Q3

SELECT C.CUST_FIRST_NAME || ' ' || C.CUST_LAST_NAME AS CUSTOMER_NAME, OI.PRODUCT_ID, OI.UNIT_PRICE
FROM OE.ORDERS O 
  INNER JOIN  OE.CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID 
  INNER JOIN OE.ORDER_ITEMS OI ON OI.ORDER_ID = O.ORDER_ID
WHERE EXTRACT(YEAR FROM O.ORDER_DATE) = 2007;

-- Q4

SELECT O.ORDER_ID, PD.PRODUCT_NAME, OI.UNIT_PRICE * OI.QUANTITY AS TOTAL_PRICE
FROM OE.ORDERS O INNER JOIN OE.ORDER_ITEMS OI ON O.ORDER_ID = OI.ORDER_ID
INNER JOIN OE.PRODUCT_INFORMATION PD ON OI.PRODUCT_ID = PD.PRODUCT_ID
WHERE EXTRACT(YEAR FROM O.ORDER_DATE) = 2008 AND OI.UNIT_PRICE > 10;

-- Q5

SELECT E1.FIRST_NAME || ' ' || E1.LAST_NAME AS EMPLOYEE_NAME, 
E2.FIRST_NAME || ' ' || E2.LAST_NAME AS MANAGER_NAME
FROM HR.EMPLOYEES E1 LEFT JOIN HR.EMPLOYEES E2 ON E1.MANAGER_ID = E2.EMPLOYEE_ID;

Aggregation

-- Q1

SELECT AVG(TRUNC(MONTHS_BETWEEN(SYSDATE, HIRE_DATE) / 12)) AS Average
FROM HR.EMPLOYEES;

-- Q3

SELECT SUPPLIER_ID, COUNT(PI.PRODUCT_ID) AS NUMBER_PRODUCTS
FROM OE.PRODUCT_INFORMATION PI 
INNER JOIN OE.ORDER_ITEMS OI ON PI.PRODUCT_ID = OI.PRODUCT_ID
GROUP BY SUPPLIER_ID

-- Q4

SELECT PRODUCT_ID, COUNT(PRODUCT_ID) AS NUMBER_OF_ITEMS
FROM OE.ORDER_ITEMS
GROUP BY PRODUCT_ID

-- Q5

SELECT YEAR, MIN(ORDER_DATE) AS FIRST_ORDER, MAX(ORDER_DATE) AS LAST_ORDER, 
COUNT(ORDER_ID) AS NUMBER_OF_ORDERS_MADE, SUM(TOTAL_PRICE) AS TOTAL_COST 
FROM (SELECT EXTRACT(YEAR FROM O.ORDER_DATE) AS YEAR, O.ORDER_DATE, O.ORDER_ID, UNIT_PRICE * QUANTITY AS TOTAL_PRICE
FROM OE.ORDERS O INNER JOIN OE.ORDER_ITEMS OI ON O.ORDER_ID = OI.ORDER_ID)
GROUP BY YEAR

-- Q6
SELECT WEEK_DAY, COUNT(WEEK_DAY) AS NUMBER_OF_ORDERS_MADE, 
  SUM(TOTAL_PRICE) AS TOTAL_COST
FROM (
  SELECT TO_CHAR(ORDER_DATE, 'DAY') AS WEEK_DAY, OI.UNIT_PRICE * OI.QUANTITY AS TOTAL_PRICE
  FROM OE.ORDERS O INNER JOIN OE.ORDER_ITEMS OI ON O.ORDER_ID = OI.ORDER_ID
)
GROUP BY WEEK_DAY

-- Q7
SELECT E.FIRST_NAME || '' || E.LAST_NAME AS FULL_NAME, SUM(ORDER_TOTAL) AS TOTAL_SALES
FROM HR.EMPLOYEES E INNER JOIN OE.ORDERS O ON E.EMPLOYEE_ID = O.SALES_REP_ID
WHERE EXTRACT(YEAR FROM O.ORDER_DATE) = 2007
GROUP BY E.FIRST_NAME || '' || E.LAST_NAME 
HAVING SUM(ORDER_TOTAL) > 20000

-- Q8

SELECT CUSTOMER_ID, CAST (SUM(ORDER_TOTAL) / 1000 AS INTEGER) AS ORACLE
FROM OE.ORDERS
GROUP BY CUSTOMER_ID

-- SUB QUERIES

-- Q1

SELECT PRODUCT_NAME
FROM OE.PRODUCT_INFORMATION
WHERE LIST_PRICE = (SELECT MAX(LIST_PRICE)
FROM OE.PRODUCT_INFORMATION)
-- Q2

SELECT DISTINCT(PRODUCT_NAME)
FROM OE.ORDER_ITEMS OI
INNER JOIN OE.PRODUCT_INFORMATION PI ON OI.PRODUCT_ID = PI.PRODUCT_ID
WHERE UNIT_PRICE = (SELECT MAX(UNIT_PRICE)
FROM OE.ORDER_ITEMS)

-- Q3

SELECT PRODUCT_NAME
FROM OE.PRODUCT_INFORMATION
WHERE LIST_PRICE > (SELECT AVG(LIST_PRICE)
FROM OE.PRODUCT_INFORMATION)

-- Q4

SELECT PRODUCT_NAME
FROM OE.ORDERS O 
INNER JOIN HR.EMPLOYEES E ON O.SALES_REP_ID = E.EMPLOYEE_ID 
INNER JOIN OE.ORDER_ITEMS OI ON OI.ORDER_ID = O.ORDER_ID
INNER JOIN OE.PRODUCT_INFORMATION PI ON PI.PRODUCT_ID = OI.PRODUCT_ID
WHERE HIRE_DATE = (SELECT MIN(HIRE_DATE)
FROM OE.ORDERS O INNER JOIN HR.EMPLOYEES E ON O.SALES_REP_ID = E.EMPLOYEE_ID)

-- Q5

SELECT DISTINCT(PRODUCT_NAME)
FROM OE.ORDER_ITEMS OI INNER JOIN OE.PRODUCT_INFORMATION PI ON PI.PRODUCT_ID = OI.PRODUCT_ID
WHERE ORDER_ID IN (SELECT ORDER_ID
FROM OE.ORDER_ITEMS
WHERE UNIT_PRICE = (SELECT MAX(UNIT_PRICE)
FROM OE.ORDER_ITEMS OI 
INNER JOIN OE.ORDERS O ON OI.ORDER_ID = O.ORDER_ID))

-- ANALYTIC FUNCTIONS

-- Q1

SELECT * FROM 
(SELECT 
  RANK() OVER (PARTITION BY CATEGORY_NAME ORDER BY LIST_PRICE DESC) AS RANK,
  CATEGORY_NAME, PRODUCT_ID, LIST_PRICE
FROM OE.CATEGORIES_TAB CT INNER JOIN OE.PRODUCT_INFORMATION PI
ON CT.CATEGORY_ID = PI.CATEGORY_ID)
WHERE RANK IN (1,2,3)

-- Q2

SELECT YEAR, TOTAL_ORDERS_COST,
  TOTAL_ORDERS_COST - LAG(TOTAL_ORDERS_COST, 1, 0) OVER (ORDER BY YEAR) AS DIFF
FROM 
(
SELECT EXTRACT(YEAR FROM ORDER_DATE) AS YEAR, SUM(ORDER_TOTAL) AS TOTAL_ORDERS_COST
FROM OE.ORDERS
GROUP BY EXTRACT(YEAR FROM ORDER_DATE)
)
ORDER BY YEAR

-- Q3

SELECT MONTH, YEAR, MONTH_TOTAL,
  SUM(MONTH_TOTAL) OVER (
  PARTITION BY YEAR
  ORDER BY MONTH) AS RUNNING_TOTAL_COST
FROM 
(
  SELECT EXTRACT(YEAR FROM ORDER_DATE) AS YEAR, EXTRACT(MONTH FROM ORDER_DATE) AS MONTH, SUM(ORDER_TOTAL) AS MONTH_TOTAL
  FROM OE.ORDERS
  GROUP by EXTRACT(MONTH FROM ORDER_DATE), EXTRACT(YEAR FROM ORDER_DATE)
  ORDER by EXTRACT(YEAR FROM ORDER_DATE), EXTRACT(MONTH FROM ORDER_DATE)
)
ORDER BY YEAR, MONTH;

-- VIEWS

-- Q1

CREATE VIEW THE_BEST_SALES_EACH_YEAR AS
SELECT YEAR, TOTAL_QUANTITY
FROM 
(
SELECT EXTRACT(YEAR FROM ORDER_DATE) AS YEAR, SALES_REP_ID AS SALER_ID, 
  RANK() OVER (PARTITION BY EXTRACT(YEAR FROM ORDER_DATE )ORDER BY SUM(QUANTITY) DESC) AS RANK, SUM(QUANTITY) AS TOTAL_QUANTITY
FROM OE.ORDERS O INNER JOIN OE.ORDER_ITEMS OI ON O.ORDER_ID = OI.ORDER_ID
WHERE SALES_REP_ID IS NOT NULL
GROUP BY SALES_REP_ID, EXTRACT(YEAR FROM ORDER_DATE) 
)
WHERE RANK = 1

-- Q2

CREATE VIEW WHO_IS_THE_BEST_SALES AS
SELECT YEAR, FIRST_NAME || ' ' || LAST_NAME AS FULL_NAME
FROM 
(
SELECT EXTRACT(YEAR FROM ORDER_DATE) AS YEAR, SALES_REP_ID AS SALER_ID, 
  RANK() OVER (PARTITION BY EXTRACT(YEAR FROM ORDER_DATE )ORDER BY SUM(QUANTITY) DESC) AS RANK, SUM(QUANTITY) AS TOTAL_QUANTITY
FROM OE.ORDERS O INNER JOIN OE.ORDER_ITEMS OI ON O.ORDER_ID = OI.ORDER_ID
WHERE SALES_REP_ID IS NOT NULL
GROUP BY SALES_REP_ID, EXTRACT(YEAR FROM ORDER_DATE) 
) INNER JOIN HR.EMPLOYEES E ON E.EMPLOYEE_ID = SALER_ID
WHERE RANK = 1

-- Q3

CREATE VIEW MOST_ORDERED_PRODUCT AS
SELECT PRODUCT_NAME
FROM 
(
SELECT OI.PRODUCT_ID, PI.PRODUCT_NAME, COUNT(OI.PRODUCT_ID) AS ORDERED_NUMBER, RANK() OVER (ORDER BY COUNT(OI.PRODUCT_ID) DESC) AS RANK
FROM OE.ORDER_ITEMS OI INNER JOIN OE.PRODUCT_INFORMATION PI ON OI.PRODUCT_ID = PI.PRODUCT_ID
GROUP BY OI.PRODUCT_ID, PI.PRODUCT_NAME
ORDER BY COUNT(OI.PRODUCT_ID) DESC
)
WHERE RANK = 1

-- Q4

CREATE VIEW LARGEST_INCOME_PRODUCT AS
SELECT PRODUCT_NAME
FROM 
(
  SELECT OI.PRODUCT_ID, PI.PRODUCT_NAME, SUM(OI.UNIT_PRICE*OI.QUANTITY) AS TOTAL_INCOME, RANK() OVER (ORDER BY SUM(OI.UNIT_PRICE*OI.QUANTITY) DESC) AS RANK
  FROM OE.ORDER_ITEMS OI INNER JOIN OE.PRODUCT_INFORMATION PI ON OI.PRODUCT_ID = PI.PRODUCT_ID
  GROUP BY OI.PRODUCT_ID, PI.PRODUCT_NAME
  ORDER BY TOTAL_INCOME DESC
)
WHERE RANK = 1
